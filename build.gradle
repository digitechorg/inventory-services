
buildscript {
    ext{
        springBootVersion = '2.4.9'
        springDependencyManagementVersion = '1.0.11.RELEASE'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath  "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
        classpath 'ru.alfalab.gradle:cucumber-reporting-gradle-plugin:0.1.0'
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'ru.alfalab.cucumber-reporting'


group = 'com.interviewrepl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    cucumberVersion = "6.10.0"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation 'junit:junit:4.13.1'
    runtimeOnly 'com.h2database:h2'

    // Junit
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation('org.mockito:mockito-core:3.7.7')

    // BDD
    testImplementation group: 'io.cucumber', name: 'cucumber-java', version: "$cucumberVersion"
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: "$cucumberVersion"
    testImplementation group: 'io.cucumber', name: 'cucumber-spring', version: "$cucumberVersion"
    testImplementation group: 'org.mock-server', name: 'mockserver-spring-test-listener', version: "5.11.2"
}


test {
    useJUnitPlatform()
}


// Functional testing using BDD Cucumber

task bdd(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'org.junit.runner.JUnitCore'
    def param = []
    param.add("-Dspring.profiles.active=local")
    args = ['bdd.cucumber.test.runner.BDDTestRunner']
    jvmArgs = param;
    systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
}

// to generate cucumber JVM report
cucumberReporting {
    cucumberResultsDirectory = file("${project.buildDir}/cucumber") // cucumber results dir (eg. cucumber.json location)
    outputDirectory = file("${project.buildDir}/reports/cucumber") // directory for save html reports
}